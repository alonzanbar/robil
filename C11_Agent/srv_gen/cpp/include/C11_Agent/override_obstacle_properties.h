/* Auto-generated by genmsg_cpp for file /home/ariy/robil/C11_Agent/srv/override_obstacle_properties.srv */
#ifndef C11_AGENT_SERVICE_OVERRIDE_OBSTACLE_PROPERTIES_H
#define C11_AGENT_SERVICE_OVERRIDE_OBSTACLE_PROPERTIES_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "C11_Agent/C11C24_OSP.h"



namespace C11_Agent
{
template <class ContainerAllocator>
struct override_obstacle_propertiesRequest_ {
  typedef override_obstacle_propertiesRequest_<ContainerAllocator> Type;

  override_obstacle_propertiesRequest_()
  : osp()
  {
  }

  override_obstacle_propertiesRequest_(const ContainerAllocator& _alloc)
  : osp(_alloc)
  {
  }

  typedef  ::C11_Agent::C11C24_OSP_<ContainerAllocator>  _osp_type;
   ::C11_Agent::C11C24_OSP_<ContainerAllocator>  osp;


  typedef boost::shared_ptr< ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct override_obstacle_propertiesRequest
typedef  ::C11_Agent::override_obstacle_propertiesRequest_<std::allocator<void> > override_obstacle_propertiesRequest;

typedef boost::shared_ptr< ::C11_Agent::override_obstacle_propertiesRequest> override_obstacle_propertiesRequestPtr;
typedef boost::shared_ptr< ::C11_Agent::override_obstacle_propertiesRequest const> override_obstacle_propertiesRequestConstPtr;


template <class ContainerAllocator>
struct override_obstacle_propertiesResponse_ {
  typedef override_obstacle_propertiesResponse_<ContainerAllocator> Type;

  override_obstacle_propertiesResponse_()
  {
  }

  override_obstacle_propertiesResponse_(const ContainerAllocator& _alloc)
  {
  }


  typedef boost::shared_ptr< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct override_obstacle_propertiesResponse
typedef  ::C11_Agent::override_obstacle_propertiesResponse_<std::allocator<void> > override_obstacle_propertiesResponse;

typedef boost::shared_ptr< ::C11_Agent::override_obstacle_propertiesResponse> override_obstacle_propertiesResponsePtr;
typedef boost::shared_ptr< ::C11_Agent::override_obstacle_propertiesResponse const> override_obstacle_propertiesResponseConstPtr;

struct override_obstacle_properties
{

typedef override_obstacle_propertiesRequest Request;
typedef override_obstacle_propertiesResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct override_obstacle_properties
} // namespace C11_Agent

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "86960dd616b9dfcf6d09f709fea7366c";
  }

  static const char* value(const  ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x86960dd616b9dfcfULL;
  static const uint64_t static_value2 = 0x6d09f709fea7366cULL;
};

template<class ContainerAllocator>
struct DataType< ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/override_obstacle_propertiesRequest";
  }

  static const char* value(const  ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/C11C24_OSP   osp\n\
\n\
================================================================================\n\
MSG: C11_Agent/C11C24_OSP\n\
int32 ACT_TYPE\n\
int32 ACT_TYPE_MODIFIED = 0\n\
int32 ACT_TYPE_DELETED  = 1\n\
int32 ACT_TYPE_NEW      = 2\n\
int32 FRZ\n\
int32 FRZ_KEEP  = 0\n\
int32 FRZ_RETRY = 1\n\
int32 TYPE\n\
int32 TYPE_STATIC=0\n\
int32 TYPE_DYNAMIC=1\n\
int16 ID\n\
C11_Agent/pathLocation[] EXTR_VIS\n\
C11_Agent/pathLocation[] EXTR_TOP\n\
C11_Agent/pathLocation[] IGNR\n\
================================================================================\n\
MSG: C11_Agent/pathLocation\n\
float64 lat\n\
float64 lon\n\
";
  }

  static const char* value(const  ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/override_obstacle_propertiesResponse";
  }

  static const char* value(const  ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
";
  }

  static const char* value(const  ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.osp);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct override_obstacle_propertiesRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct override_obstacle_propertiesResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<C11_Agent::override_obstacle_properties> {
  static const char* value() 
  {
    return "86960dd616b9dfcf6d09f709fea7366c";
  }

  static const char* value(const C11_Agent::override_obstacle_properties&) { return value(); } 
};

template<>
struct DataType<C11_Agent::override_obstacle_properties> {
  static const char* value() 
  {
    return "C11_Agent/override_obstacle_properties";
  }

  static const char* value(const C11_Agent::override_obstacle_properties&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "86960dd616b9dfcf6d09f709fea7366c";
  }

  static const char* value(const C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/override_obstacle_properties";
  }

  static const char* value(const C11_Agent::override_obstacle_propertiesRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "86960dd616b9dfcf6d09f709fea7366c";
  }

  static const char* value(const C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/override_obstacle_properties";
  }

  static const char* value(const C11_Agent::override_obstacle_propertiesResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // C11_AGENT_SERVICE_OVERRIDE_OBSTACLE_PROPERTIES_H

