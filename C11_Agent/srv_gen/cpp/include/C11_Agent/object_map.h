/* Auto-generated by genmsg_cpp for file /home/ariy/robil/C11_Agent/srv/object_map.srv */
#ifndef C11_AGENT_SERVICE_OBJECT_MAP_H
#define C11_AGENT_SERVICE_OBJECT_MAP_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"

#include "C11_Agent/C11C23_OBM.h"


#include "C11_Agent/C23C11_OSM.h"

namespace C11_Agent
{
template <class ContainerAllocator>
struct object_mapRequest_ {
  typedef object_mapRequest_<ContainerAllocator> Type;

  object_mapRequest_()
  : obm()
  {
  }

  object_mapRequest_(const ContainerAllocator& _alloc)
  : obm(_alloc)
  {
  }

  typedef  ::C11_Agent::C11C23_OBM_<ContainerAllocator>  _obm_type;
   ::C11_Agent::C11C23_OBM_<ContainerAllocator>  obm;


  typedef boost::shared_ptr< ::C11_Agent::object_mapRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C11_Agent::object_mapRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct object_mapRequest
typedef  ::C11_Agent::object_mapRequest_<std::allocator<void> > object_mapRequest;

typedef boost::shared_ptr< ::C11_Agent::object_mapRequest> object_mapRequestPtr;
typedef boost::shared_ptr< ::C11_Agent::object_mapRequest const> object_mapRequestConstPtr;


template <class ContainerAllocator>
struct object_mapResponse_ {
  typedef object_mapResponse_<ContainerAllocator> Type;

  object_mapResponse_()
  : obm()
  {
  }

  object_mapResponse_(const ContainerAllocator& _alloc)
  : obm(_alloc)
  {
  }

  typedef  ::C11_Agent::C23C11_OSM_<ContainerAllocator>  _obm_type;
   ::C11_Agent::C23C11_OSM_<ContainerAllocator>  obm;


  typedef boost::shared_ptr< ::C11_Agent::object_mapResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C11_Agent::object_mapResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct object_mapResponse
typedef  ::C11_Agent::object_mapResponse_<std::allocator<void> > object_mapResponse;

typedef boost::shared_ptr< ::C11_Agent::object_mapResponse> object_mapResponsePtr;
typedef boost::shared_ptr< ::C11_Agent::object_mapResponse const> object_mapResponseConstPtr;

struct object_map
{

typedef object_mapRequest Request;
typedef object_mapResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct object_map
} // namespace C11_Agent

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C11_Agent::object_mapRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C11_Agent::object_mapRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C11_Agent::object_mapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "47cc4e9671b58ffc3bf33c91b6870787";
  }

  static const char* value(const  ::C11_Agent::object_mapRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x47cc4e9671b58ffcULL;
  static const uint64_t static_value2 = 0x3bf33c91b6870787ULL;
};

template<class ContainerAllocator>
struct DataType< ::C11_Agent::object_mapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/object_mapRequest";
  }

  static const char* value(const  ::C11_Agent::object_mapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C11_Agent::object_mapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
C11_Agent/C11C23_OBM  obm\n\
\n\
\n\
================================================================================\n\
MSG: C11_Agent/C11C23_OBM\n\
float64 LAT\n\
int16 SCN\n\
int16 SCN_SCAN=0\n\
int16 SCN_CURRENT=1\n\
int16 MOV\n\
int16 MOV_NONE     = 0\n\
int16 MOV_HEAD     = 1\n\
int16 MOV_POSTURE  = 2\n\
int16 MOV_POSITION = 3\n\
";
  }

  static const char* value(const  ::C11_Agent::object_mapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::C11_Agent::object_mapRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C11_Agent::object_mapResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C11_Agent::object_mapResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C11_Agent::object_mapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "6c4ffb214079c9222f0739c076874c9f";
  }

  static const char* value(const  ::C11_Agent::object_mapResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x6c4ffb214079c922ULL;
  static const uint64_t static_value2 = 0x2f0739c076874c9fULL;
};

template<class ContainerAllocator>
struct DataType< ::C11_Agent::object_mapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/object_mapResponse";
  }

  static const char* value(const  ::C11_Agent::object_mapResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C11_Agent::object_mapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/C23C11_OSM  obm\n\
\n\
\n\
================================================================================\n\
MSG: C11_Agent/C23C11_OSM\n\
int16 ID\n\
string NAME\n\
C11_Agent/coord EXTR_3D\n\
C11_Agent/coord CNTR\n\
C11_Agent/D3SPACE ORIN\n\
================================================================================\n\
MSG: C11_Agent/coord\n\
float64 X\n\
float64 Y\n\
float64 Z\n\
================================================================================\n\
MSG: C11_Agent/D3SPACE\n\
float64 ROLL\n\
float64 PITCH\n\
float64 YAW\n\
";
  }

  static const char* value(const  ::C11_Agent::object_mapResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C11_Agent::object_mapRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.obm);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct object_mapRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C11_Agent::object_mapResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.obm);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct object_mapResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<C11_Agent::object_map> {
  static const char* value() 
  {
    return "135a2212300a3065c3dd01227eabc7d4";
  }

  static const char* value(const C11_Agent::object_map&) { return value(); } 
};

template<>
struct DataType<C11_Agent::object_map> {
  static const char* value() 
  {
    return "C11_Agent/object_map";
  }

  static const char* value(const C11_Agent::object_map&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<C11_Agent::object_mapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "135a2212300a3065c3dd01227eabc7d4";
  }

  static const char* value(const C11_Agent::object_mapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<C11_Agent::object_mapRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/object_map";
  }

  static const char* value(const C11_Agent::object_mapRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<C11_Agent::object_mapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "135a2212300a3065c3dd01227eabc7d4";
  }

  static const char* value(const C11_Agent::object_mapResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<C11_Agent::object_mapResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C11_Agent/object_map";
  }

  static const char* value(const C11_Agent::object_mapResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // C11_AGENT_SERVICE_OBJECT_MAP_H

