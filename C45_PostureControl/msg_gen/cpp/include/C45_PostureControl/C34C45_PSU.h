/* Auto-generated by genmsg_cpp for file /home/lab116/git2/robil/C45_PostureControl/msg/C34C45_PSU.msg */
#ifndef C45_POSTURECONTROL_MESSAGE_C34C45_PSU_H
#define C45_POSTURECONTROL_MESSAGE_C34C45_PSU_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"


namespace C45_PostureControl
{
template <class ContainerAllocator>
struct C34C45_PSU_ {
  typedef C34C45_PSU_<ContainerAllocator> Type;

  C34C45_PSU_()
  : posture_state_update(0)
  {
  }

  C34C45_PSU_(const ContainerAllocator& _alloc)
  : posture_state_update(0)
  {
  }

  typedef int32_t _posture_state_update_type;
  int32_t posture_state_update;


  typedef boost::shared_ptr< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct C34C45_PSU
typedef  ::C45_PostureControl::C34C45_PSU_<std::allocator<void> > C34C45_PSU;

typedef boost::shared_ptr< ::C45_PostureControl::C34C45_PSU> C34C45_PSUPtr;
typedef boost::shared_ptr< ::C45_PostureControl::C34C45_PSU const> C34C45_PSUConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace C45_PostureControl

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> > {
  static const char* value() 
  {
    return "5d913d20b0c65c63caaf018ab5c6c2f0";
  }

  static const char* value(const  ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x5d913d20b0c65c63ULL;
  static const uint64_t static_value2 = 0xcaaf018ab5c6c2f0ULL;
};

template<class ContainerAllocator>
struct DataType< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C45_PostureControl/C34C45_PSU";
  }

  static const char* value(const  ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> > {
  static const char* value() 
  {
    return "int32 posture_state_update\n\
\n\
";
  }

  static const char* value(const  ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.posture_state_update);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct C34C45_PSU_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::C45_PostureControl::C34C45_PSU_<ContainerAllocator> & v) 
  {
    s << indent << "posture_state_update: ";
    Printer<int32_t>::stream(s, indent + "  ", v.posture_state_update);
  }
};


} // namespace message_operations
} // namespace ros

#endif // C45_POSTURECONTROL_MESSAGE_C34C45_PSU_H

