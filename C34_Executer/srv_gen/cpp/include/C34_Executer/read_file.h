/* Auto-generated by genmsg_cpp for file /home/ariy/robil/C34_Executer/srv/read_file.srv */
#ifndef C34_EXECUTER_SERVICE_READ_FILE_H
#define C34_EXECUTER_SERVICE_READ_FILE_H
#include <string>
#include <vector>
#include <map>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/time.h"

#include "ros/macros.h"

#include "ros/assert.h"

#include "ros/service_traits.h"




namespace C34_Executer
{
template <class ContainerAllocator>
struct read_fileRequest_ {
  typedef read_fileRequest_<ContainerAllocator> Type;

  read_fileRequest_()
  : filename()
  {
  }

  read_fileRequest_(const ContainerAllocator& _alloc)
  : filename(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _filename_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  filename;


  typedef boost::shared_ptr< ::C34_Executer::read_fileRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C34_Executer::read_fileRequest_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct read_fileRequest
typedef  ::C34_Executer::read_fileRequest_<std::allocator<void> > read_fileRequest;

typedef boost::shared_ptr< ::C34_Executer::read_fileRequest> read_fileRequestPtr;
typedef boost::shared_ptr< ::C34_Executer::read_fileRequest const> read_fileRequestConstPtr;


template <class ContainerAllocator>
struct read_fileResponse_ {
  typedef read_fileResponse_<ContainerAllocator> Type;

  read_fileResponse_()
  : content()
  {
  }

  read_fileResponse_(const ContainerAllocator& _alloc)
  : content(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _content_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  content;


  typedef boost::shared_ptr< ::C34_Executer::read_fileResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::C34_Executer::read_fileResponse_<ContainerAllocator>  const> ConstPtr;
  boost::shared_ptr<std::map<std::string, std::string> > __connection_header;
}; // struct read_fileResponse
typedef  ::C34_Executer::read_fileResponse_<std::allocator<void> > read_fileResponse;

typedef boost::shared_ptr< ::C34_Executer::read_fileResponse> read_fileResponsePtr;
typedef boost::shared_ptr< ::C34_Executer::read_fileResponse const> read_fileResponseConstPtr;

struct read_file
{

typedef read_fileRequest Request;
typedef read_fileResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct read_file
} // namespace C34_Executer

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C34_Executer::read_fileRequest_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C34_Executer::read_fileRequest_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C34_Executer::read_fileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "030824f52a0628ead956fb9d67e66ae9";
  }

  static const char* value(const  ::C34_Executer::read_fileRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x030824f52a0628eaULL;
  static const uint64_t static_value2 = 0xd956fb9d67e66ae9ULL;
};

template<class ContainerAllocator>
struct DataType< ::C34_Executer::read_fileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C34_Executer/read_fileRequest";
  }

  static const char* value(const  ::C34_Executer::read_fileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C34_Executer::read_fileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string filename\n\
\n\
";
  }

  static const char* value(const  ::C34_Executer::read_fileRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator> struct IsMessage< ::C34_Executer::read_fileResponse_<ContainerAllocator> > : public TrueType {};
template<class ContainerAllocator> struct IsMessage< ::C34_Executer::read_fileResponse_<ContainerAllocator>  const> : public TrueType {};
template<class ContainerAllocator>
struct MD5Sum< ::C34_Executer::read_fileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c2e84951ee6d0addf437bfddd5b19734";
  }

  static const char* value(const  ::C34_Executer::read_fileResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc2e84951ee6d0addULL;
  static const uint64_t static_value2 = 0xf437bfddd5b19734ULL;
};

template<class ContainerAllocator>
struct DataType< ::C34_Executer::read_fileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C34_Executer/read_fileResponse";
  }

  static const char* value(const  ::C34_Executer::read_fileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::C34_Executer::read_fileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string content\n\
\n\
\n\
";
  }

  static const char* value(const  ::C34_Executer::read_fileResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C34_Executer::read_fileRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.filename);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct read_fileRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::C34_Executer::read_fileResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.content);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct read_fileResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<C34_Executer::read_file> {
  static const char* value() 
  {
    return "721a81a841b9f7d23627ace8018b523f";
  }

  static const char* value(const C34_Executer::read_file&) { return value(); } 
};

template<>
struct DataType<C34_Executer::read_file> {
  static const char* value() 
  {
    return "C34_Executer/read_file";
  }

  static const char* value(const C34_Executer::read_file&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<C34_Executer::read_fileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "721a81a841b9f7d23627ace8018b523f";
  }

  static const char* value(const C34_Executer::read_fileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<C34_Executer::read_fileRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C34_Executer/read_file";
  }

  static const char* value(const C34_Executer::read_fileRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<C34_Executer::read_fileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "721a81a841b9f7d23627ace8018b523f";
  }

  static const char* value(const C34_Executer::read_fileResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<C34_Executer::read_fileResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "C34_Executer/read_file";
  }

  static const char* value(const C34_Executer::read_fileResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // C34_EXECUTER_SERVICE_READ_FILE_H

